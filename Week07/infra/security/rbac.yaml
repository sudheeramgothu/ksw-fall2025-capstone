apiVersion: v1
kind: ServiceAccount
metadata:
  name: flask-app-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: flask-app-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: flask-app-rolebinding
  namespace: default
subjects:
- kind: ServiceAccount
  name: flask-app-sa
  namespace: default
roleRef:
  kind: Role
  name: flask-app-role
  apiGroup: rbac.authorization.k8s.io

---
How to apply:

kubectl apply -f infra/security/rbac.yaml
kubectl get rolebinding -n default

Example Trivy Scan Command:

Run the scan locally or in Jenkins:

docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image <REGISTRY>/<APP_NAME>:<TAG> > Week07/trivy-report.txt

Output example:

Total: 23 (UNKNOWN: 0, LOW: 10, MEDIUM: 8, HIGH: 4, CRITICAL: 1)
